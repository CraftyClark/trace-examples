FROM datadog/docker-library:ddtrace_alpine_php-7.2.9-debug
USER root
        
ARG DD_TRACE_VERSION
ARG WEB_APP_PATH

COPY ${WEB_APP_PATH} /var/www

# Install DDTrace deb
ARG PKG_SRC=https://14831-119990860-gh.circle-artifacts.com/0/datadog-php-tracer_0.13.3-beta_noarch.apk
RUN set -xe; \ 
    curl -L -o datadog-php-tracer.apk ${PKG_SRC}; \
    apk --allow-untrusted --no-cache add datadog-php-tracer.apk && rm datadog-php-tracer.apk

## Use the debug version instead
# RUN echo "extension=/opt/datadog-php/extensions/ddtrace-20170718-debug.so" > /usr/local/etc/php/conf.d/98-ddtrace.ini
#RUN echo "ddtrace.request_init_hook=/opt/datadog-php/dd-trace-sources/bridge/dd_wrap_autoloader.php" >> /usr/local/etc/php/conf.d/98-ddtrace.ini

COPY Dockerfiles/php_nginx_default.conf /etc/nginx/conf.d/default.conf
COPY Dockerfiles/supervisord-nginx-fpm.conf /etc/supervisord.conf
COPY Dockerfiles/php-dd-ext.ini /usr/local/etc/php/conf.d/php-dd-ext.ini
COPY Dockerfiles/opcache.ini /usr/local/etc/php/conf.d/opcache-dd-ext.ini
COPY Dockerfiles/acpu.ini /usr/local/etc/php/conf.d/acpu-dd-ext.ini

RUN apk --no-cache add supervisor nginx

ARG DD_TRACE_BRANCH=update_images_and_enable_leak_detection
RUN set -xe; \
    mkdir /usr/src/dd-trace-php && cd /usr/src; \
    curl -o tmp.tar.gz -L https://github.com/DataDog/dd-trace-php/archive/${DD_TRACE_BRANCH}.tar.gz; \
    tar xf tmp.tar.gz --strip-component=1; \
    rm tmp.tar.gz; \
    make debug install; \
    { \
        echo "extension=/usr/local/lib/php/extensions/debug-non-zts-20170718/ddtrace.so"; \
        echo "ddtrace.request_init_hook=/opt/datadog-php/dd-trace-sources/bridge/dd_wrap_autoloader.php"; \
    } | tee /usr/local/etc/php/conf.d/98-ddtrace.ini;
WORKDIR /var/www

RUN chmod -R a+w /var/www
#USER circleci
# EXPOSE 8001:80

ENV USE_ZEND_ALLOC 0
ENV ZEND_DONT_UNLOAD_MODULES 1

# RUN php -d memory_limit=-1 /usr/bin/composer update --no-dev

WORKDIR /extensions

CMD [ "supervisord", "-n" ]
